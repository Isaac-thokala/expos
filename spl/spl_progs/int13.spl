alias userSP R10;
userSP = SP;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16 ) + 11] * 512 -1;

alias functionNum R1;
functionNum = [[PTBR + 2 * ((userSP - 5) / 512)] * 512 + ((userSP - 5) % 512)];

alias currentPID R2;	
alias semID R3;
alias index R4;
alias counter R5;

if(functionNum == INT_SEMGET) then
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] + 9] = 17;
	
	counter = 0;		//find free-entry in perprocess table
	currentPID = [SYSTEM_STATUS_TABLE + 1];
	index = -1;
	
	while(counter < 8) do
		if([[PROCESS_TABLE + currentPID * 16 + 11] * 512 + 2 * counter + 496] == -1) then
			index = counter;
			break;
		endif;
		counter = counter + 1;
	endwhile;
	
	if(index == -1) then
		[[PTBR + 2 * ((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = -1;
		SP = userSP;
		ireturn;
	endif;
	
	[[PTBR + 2 * ((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = -2;
	multipush(R1,R2,R3,R4,R10);
	functionNum = ACQUIRE_SEMAPHORE;
	currentPID = [SYSTEM_STATUS_TABLE + 1];
	call MOD_0;
	multipop(R1,R2,R3,R4,R10);
			
	if(R0 == -1) then
		[[PTBR + 2 * ((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = -2;
		SP = userSP;
		ireturn;
	endif;
	
	[[PROCESS_TABLE + currentPID * 16 + 11] * 512 + 2 * index + 1 + 496] = R0;
	SP = userSP;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] + 9] = 0;
	ireturn;

endif;
			
			
if(functionNum == INT_SEMRELEASE) then
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] + 9] = 17;
	
	semID = [[PTBR + 2 * ((userSP - 4) / 512)] * 512 + ((userSP - 4) % 512)];
	
	if(semID < 0 || semID > 7) then
		[[PTBR + 2 * ((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = -1;
		SP = userSP;
		ireturn;
	endif;
	
	if([[PROCESS_TABLE + currentPID * 16 + 11] * 512 + 2 * semID + 496] != 1) then
		[[PTBR + 2 * ((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = -1;
		SP = userSP;
		ireturn;
	endif;
	
	multipush(R1,R2,R3,R4,R5,R10);
	functionNum = RELEASE_SEMAPHORE;
	R2 = [[PROCESS_TABLE + currentPID * 16 + 11] * 512 + 2 * semID + 1 + 496];
	R3 = currentPID;
	call MOD_0;
	multipop(R1,R2,R3,R4,R5,R10);
	
	[[PROCESS_TABLE + currentPID * 16 + 11] * 512 + 2 * semID + 496] = -1;
	[[PROCESS_TABLE + currentPID * 16 + 11] * 512 + 2 * semID + 1 + 496] = -1;
	
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] + 9] = 17;
	[[PTBR + 2 * ((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = 0;
	SP = userSP;
	ireturn;
	
endif;


