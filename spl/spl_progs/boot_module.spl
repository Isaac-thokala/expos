breakpoint;
loadi(63,13);
loadi(64,14);
loadi(65,7);
loadi(66,8);
loadi(22,35);
loadi(23,36);
loadi(2,15);
loadi(3,16);
loadi(4,17);
loadi(5,18);
loadi(16,29);
loadi(17,30);
loadi(69,11);
loadi(70,12);
loadi(90,69);
loadi(100,70);
loadi(50,63);
loadi(51,64);
loadi(40,53);
loadi(41,54);
loadi(48,61);
loadi(49,62);
loadi(8,21);
loadi(9,22);
loadi(14,27);
loadi(15,28);
loadi(20,33);
loadi(21,34);
loadi(42,55);
loadi(43,56);
loadi(44,57);
loadi(45,58);
loadi(59,3);
loadi(60,4);
loadi(6,19);
loadi(7,20);
loadi(61,2);
loadi(18,31);
loadi(19,32);
loadi(24,37);
loadi(25,38);
loadi(32,45);
loadi(33,46);
loadi(28,41);
loadi(29,42);
loadi(30,43);
loadi(31,44);

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

// INIT PAGE TABLE
[PTBR+00] = 63;
[PTBR+01] = "0100";
[PTBR+02] = 64;
[PTBR+03] = "0100";
[PTBR+04] = 78;
[PTBR+05] = "0110";
[PTBR+06] = 79;
[PTBR+07] = "0110";
[PTBR+08] = 65;
[PTBR+09] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

alias counter R0;
counter = 496;
while(counter < 512) do
	[([PROCESS_TABLE + ( 1 * 16) + 4] * 512) + counter] = -1; // last 16 blocks of user area page of process 1
	counter = counter + 1;
endwhile;

counter = 0;
while(counter < 32) do 		//semaphore table
	[SEMAPHORE_TABLE + 4 * counter] = -1;
	[SEMAPHORE_TABLE + 4 * counter + 1] = 0;
	counter = counter + 1;
endwhile;


//disk map table

counter = 0;
while(counter < 160) do
	[DISK_MAP_TABLE + counter] = -1;
	counter = counter + 1;
endwhile;

[DISK_MAP_TABLE + 4] = 69;

[DISK_MAP_TABLE + 14] = 65;
[DISK_MAP_TABLE + 15] = 66;


//process table
[PROCESS_TABLE + 16+1] = 1;
[PROCESS_TABLE + 16+4] = CREATED;
[PROCESS_TABLE + 16+11] = 80;
[PROCESS_TABLE + 16+12] = 0;
[PROCESS_TABLE + 16+13] = 8*512;
[PROCESS_TABLE + 16+14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16+15] = 10;



[76*512] = [65*512+1];
[94*512] = [90*512+1];
[101*512] = [100*512+1];


counter=2;    //change counter according to no of processes running
while(counter<16) do
 [PROCESS_TABLE + 16*counter +4]=TERMINATED;
 counter = counter +1;
endwhile;

counter = 0;
while(counter <= 83) do
	[MEMORY_FREE_LIST + counter] = 1;
	
	counter = counter + 1;
endwhile;

counter = 84;
while(counter < 128) do
	[MEMORY_FREE_LIST + counter] = 0;
	counter = counter + 1;
endwhile;

[TERMINAL_STATUS_TABLE ] = 0;
[DISK_STATUS_TABLE] = 0;
[SYSTEM_STATUS_TABLE + 3] = 0;
[SYSTEM_STATUS_TABLE + 2] = 45;


return;
