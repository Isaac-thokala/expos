loadi(63,13);
loadi(64,14);
loadi(65,7);
loadi(66,8);
loadi(22,35);
loadi(23,36);
loadi(2, 15);
loadi(3, 16);
loadi(4, 17);
loadi(5, 18);
loadi(16,29);
loadi(17,30);
loadi(69,11);
loadi(70,12);
loadi(90,69);
loadi(100,70);
loadi(50,63);
loadi(51,64);
loadi(40,53);
loadi(41,54);
loadi(48,61);
loadi(49,62);
loadi(8,21);
loadi(9,22);
loadi(14,27);
loadi(15,28);

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

// INIT PAGE TABLE
[PTBR+00] = 63;
[PTBR+01] = "0100";
[PTBR+02] = 64;
[PTBR+03] = "0100";
[PTBR+04] = 78;
[PTBR+05] = "0110";
[PTBR+06] = 79;
[PTBR+07] = "0110";
[PTBR+08] = 65;
[PTBR+09] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

//exec page table
PTBR = PAGE_TABLE_BASE + 40;
PTLR = 10;
[PTBR+00] = 63;
[PTBR+01] = "0100";
[PTBR+02] = 64;
[PTBR+03] = "0100";
[PTBR+04] = -1;
[PTBR+05] = "0000";
[PTBR+06] = -1;
[PTBR+07] = "0000";
[PTBR+08] = 90;
[PTBR+09] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";
[PTBR+16] = 94;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

// 2 EXEC PAGE TABLE
PTBR = PAGE_TABLE_BASE + 60;
PTLR = 10;
[PTBR+00] = 63;
[PTBR+01] = "0100";
[PTBR+02] = 64;
[PTBR+03] = "0100";
[PTBR+04] = -1;
[PTBR+05] = "0000";
[PTBR+06] = -1;
[PTBR+07] = "0000";
[PTBR+08] = 100;
[PTBR+09] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";
[PTBR+16] = 101;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

//process table
[PROCESS_TABLE + 16+1] = 1;
[PROCESS_TABLE + 16+4] = CREATED;
[PROCESS_TABLE + 16+11] = 80;
[PROCESS_TABLE + 16+12] = 0;
[PROCESS_TABLE + 16+13] = 8*512;
[PROCESS_TABLE + 16+14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16+15] = 10;

[PROCESS_TABLE + 16*2+1] = 2;
[PROCESS_TABLE + 16*2+4] = CREATED;
[PROCESS_TABLE + 16*2+11] = 96;
[PROCESS_TABLE + 16*2+12] = 0;
[PROCESS_TABLE + 16*2+13] = 8*512;
[PROCESS_TABLE + 16*2+14] = PAGE_TABLE_BASE + 40;
[PROCESS_TABLE + 16*2+15] = 10;

[PROCESS_TABLE + 16*3+1] = 3;
[PROCESS_TABLE + 16*3+4] = CREATED;
[PROCESS_TABLE + 16*3+11] = 102;
[PROCESS_TABLE + 16*3+12] = 0;
[PROCESS_TABLE + 16*3+13] = 8*512;
[PROCESS_TABLE + 16*3+14] = PAGE_TABLE_BASE + 60;
[PROCESS_TABLE + 16*3+15] = 10;

[76*512] = [65*512+1];
[94*512] = [90*512+1];
[101*512] = [100*512+1];

alias counter R0;
counter=2;    //change counter according to no of processes running
while(counter<16) do
 [PROCESS_TABLE + 16*counter +4]=TERMINATED;
 counter = counter +1;
endwhile;

[TERMINAL_STATUS_TABLE ] = 0;

return;
