loadi(63,13);
loadi(64,14);
loadi(65,7);
loadi(66,8);
loadi(22,35);
loadi(23,36);
loadi(2, 15);
loadi(3, 16);
loadi(4, 17);
loadi(5, 18);
loadi(16,29);
loadi(17,30);
loadi(69,11);
loadi(70,12);
loadi(90,69);
loadi(50,63);
loadi(51,64);
loadi(40,53);
loadi(41,54);
loadi(48,61);
loadi(49,62);
loadi(8,21);
loadi(9,22);
loadi(14,27);
loadi(15,28);

PTBR = PAGE_TABLE_BASE;
PTLR = 10;

// INIT PAGE TABLE
[PTBR+20] = 63;
[PTBR+21] = "0100";
[PTBR+22] = 64;
[PTBR+23] = "0100";
[PTBR+24] = 78;
[PTBR+25] = "0110";
[PTBR+26] = 79;
[PTBR+27] = "0110";
[PTBR+28] = 65;
[PTBR+29] = "0100";
[PTBR+30] = 66;
[PTBR+31] = "0100";
[PTBR+32] = -1;
[PTBR+33] = "0000";
[PTBR+34] = -1;
[PTBR+35] = "0000";
[PTBR+36] = 76;
[PTBR+37] = "0110";
[PTBR+38] = 77;
[PTBR+39] = "0110";

//exec page table
[PTBR+40] = 63;
[PTBR+41] = "0100";
[PTBR+42] = 64;
[PTBR+43] = "0100";
[PTBR+44] = -1;
[PTBR+45] = "0000";
[PTBR+46] = -1;
[PTBR+47] = "0000";
[PTBR+48] = 90;
[PTBR+49] = "0100";
[PTBR+50] = -1;
[PTBR+51] = "0000";
[PTBR+52] = -1;
[PTBR+53] = "0000";
[PTBR+54] = -1;
[PTBR+55] = "0000";
[PTBR+56] = 94;
[PTBR+57] = "0110";
[PTBR+58] = -1;
[PTBR+59] = "0000";

//process table
[PROCESS_TABLE + 16+1] = 1;
[PROCESS_TABLE + 16+4] = CREATED;
[PROCESS_TABLE + 16+11] = 80;
[PROCESS_TABLE + 16+12] = 0;
[PROCESS_TABLE + 16+13] = 8*512;
[PROCESS_TABLE + 16+14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16+15] = 10;

[PROCESS_TABLE + 16*2+1] = 2;
[PROCESS_TABLE + 16*2+4] = CREATED;
[PROCESS_TABLE + 16*2+11] = 96;
[PROCESS_TABLE + 16*2+12] = 0;
[PROCESS_TABLE + 16*2+13] = 8*512;
[PROCESS_TABLE + 16*2+14] = PAGE_TABLE_BASE + 40;
[PROCESS_TABLE + 16*2+15] = 10;

[76*512] = [65*512+1];
[94*512] = [90*512+1];

alias counter R0;
counter=2;
while(counter<16) do
 [PROCESS_TABLE + 16*counter +4]=TERMINATED;
 counter = counter +1;
endwhile;

[TERMINAL_STATUS_TABLE ] = 0;

return;
